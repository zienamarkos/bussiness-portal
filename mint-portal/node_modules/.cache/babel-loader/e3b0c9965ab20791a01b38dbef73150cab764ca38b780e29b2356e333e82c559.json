{"ast":null,"code":"var _jsxFileName = \"/home/zena/projects/bussiness-portal/mint-portal/src/components/navbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles.css\";\nimport et_flag from \"../images/et_flag.png\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navv\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"logo\",\n      src: et_flag,\n      alt: \"eth_flag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Federal Democratic Republic of Ethiopia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: `ul ${isOpen && \"open\"}`,\n      children: [/*#__PURE__*/_jsxDEV(Customlink, {\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Customlink, {\n        to: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Customlink, {\n        to: \"/register\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"bar-toggle\",\n      className: `small-menu ${isOpen && \"open\"}`,\n      onClick: () => setIsOpen(!isOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_s(Navbar, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Navbar;\n;\nfunction Customlink(_ref) {\n  let {\n    to,\n    children,\n    ...props\n  } = _ref;\n  const path = window.location.pathname;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: path === to ? \"active\" : \"\",\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: to,\n      ...props,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 13\n  }, this);\n}\n_c2 = Customlink;\nexport default Navbar;\nvar _c, _c2;\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"Customlink\");","map":{"version":3,"names":["React","useState","et_flag","Link","jsxDEV","_jsxDEV","Navbar","_s","isOpen","setIsOpen","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","to","Customlink","for","onClick","_c","_ref","props","path","window","location","pathname","_c2","$RefreshReg$"],"sources":["/home/zena/projects/bussiness-portal/mint-portal/src/components/navbar.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../styles.css\";\nimport et_flag from \"../images/et_flag.png\";\nimport { Link } from \"react-router-dom\";\n\n\nfunction Navbar(){\n    const [isOpen, setIsOpen]=useState(false);\n    return(\n        <nav className=\"navv\">                                  \n               \n                    <img className=\"logo\" src={et_flag} alt=\"eth_flag\" />\n                    <div className=\"title\">\n                        <Link to=\"/\">Federal Democratic Republic of Ethiopia</Link>\n                    </div>               \n                    \n                <ul className={`ul ${isOpen && \"open\"}`} >\n                    <Customlink to=\"/\">Home</Customlink>\n                    <Customlink to=\"/login\">Login</Customlink>\n                    <Customlink to=\"/register\">Register</Customlink>                \n                                \n                </ul>\n    \n            \n                <label for=\"bar-toggle\" className={`small-menu ${isOpen && \"open\"}`} \n                onClick={()=> setIsOpen(!isOpen)} >\n                    <div className=\"line\"></div>\n                    <div className=\"line\"></div>\n                    <div className=\"line\"></div>\n                </label>\n               \n\n        </nav>\n        \n        \n        \n    );\n    \n    \n};\n\n\nfunction Customlink({to, children, ...props}){\n    const path=window.location.pathname\n    return(\n        \n            <li className={path===to? \"active\": \"\"}>\n                <Link to={to} {...props}>{children}</Link>\n            </li>   \n            \n    )\n}\n\nexport default Navbar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AACtB,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,SAASC,MAAMA,CAAA,EAAE;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAACR,QAAQ,CAAC,KAAK,CAAC;EACzC,oBACII,OAAA;IAAKK,SAAS,EAAC,MAAM;IAAAC,QAAA,gBAETN,OAAA;MAAKK,SAAS,EAAC,MAAM;MAACE,GAAG,EAAEV,OAAQ;MAACW,GAAG,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACrDZ,OAAA;MAAKK,SAAS,EAAC,OAAO;MAAAC,QAAA,eAClBN,OAAA,CAACF,IAAI;QAACe,EAAE,EAAC,GAAG;QAAAP,QAAA,EAAC;MAAuC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAO;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzD,eAEVZ,OAAA;MAAIK,SAAS,EAAG,MAAKF,MAAM,IAAI,MAAO,EAAE;MAAAG,QAAA,gBACpCN,OAAA,CAACc,UAAU;QAACD,EAAE,EAAC,GAAG;QAAAP,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eACpCZ,OAAA,CAACc,UAAU;QAACD,EAAE,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa,eAC1CZ,OAAA,CAACc,UAAU;QAACD,EAAE,EAAC,WAAW;QAAAP,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAa;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAE/C,eAGLZ,OAAA;MAAOe,GAAG,EAAC,YAAY;MAACV,SAAS,EAAG,cAAaF,MAAM,IAAI,MAAO,EAAE;MACpEa,OAAO,EAAEA,CAAA,KAAKZ,SAAS,CAAC,CAACD,MAAM,CAAE;MAAAG,QAAA,gBAC7BN,OAAA;QAAKK,SAAS,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eAC5BZ,OAAA;QAAKK,SAAS,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eAC5BZ,OAAA;QAAKK,SAAS,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAGV;AAOd;AAACV,EAAA,CAjCQD,MAAM;AAAAgB,EAAA,GAANhB,MAAM;AAiCd;AAGD,SAASa,UAAUA,CAAAI,IAAA,EAA0B;EAAA,IAAzB;IAACL,EAAE;IAAEP,QAAQ;IAAE,GAAGa;EAAK,CAAC,GAAAD,IAAA;EACxC,MAAME,IAAI,GAACC,MAAM,CAACC,QAAQ,CAACC,QAAQ;EACnC,oBAEQvB,OAAA;IAAIK,SAAS,EAAEe,IAAI,KAAGP,EAAE,GAAE,QAAQ,GAAE,EAAG;IAAAP,QAAA,eACnCN,OAAA,CAACF,IAAI;MAACe,EAAE,EAAEA,EAAG;MAAA,GAAKM,KAAK;MAAAb,QAAA,EAAGA;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAQ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACzC;AAGjB;AAACY,GAAA,GATQV,UAAU;AAWnB,eAAeb,MAAM;AAAC,IAAAgB,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}